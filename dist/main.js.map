{"mappings":"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","sources":["src/browser.js","src/FileSystem.js","src/Path.js","src/Adapters/HttpAdapter.js"],"sourcesContent":["import JSFS from './FileSystem.js'\nimport HttpAdapter from './Adapters/HttpAdapter.js'\n\nwindow.JSFS = JSFS\nwindow.jsfsHttpAdapter = HttpAdapter","import Path from './Path.js';\n\nexport default class FileSystem {\n\t\n\t#adapter;\n\t#path = '/';\n\n\tconstructor(adapter) {\n\t\tthis.#adapter = adapter\n\t\tthis.#path = this.#adapter.path;\n\t}\n\n\tget path() {\n\t\treturn this.#path;\n\t}\n\n\tcd(path) {\n\t\tif (!(path instanceof Path)) {\n\t\t\tpath = new Path(Path.collapse(path, this.#path));\n\t\t}\n\t\treturn new FileSystem(this.#adapter.cd(path));\n\t}\n\n\tasync read(path, reader = null) {\n\t\tif (!(path instanceof Path)) {\n\t\t\tpath = new Path(Path.collapse(path, this.#path));\n\t\t}\n\t\tif (typeof reader === 'function') {\n\t\t\tif (!this.#adapter.supportsStreamingRead()) {\n\t\t\t\tthrow new Error('Adapter '+this.#adapter.name+' does not support streaming reading.');\n\t\t\t}\n\t\t\treturn this.#adapter.readStream(path, reader);\n\t\t} else {\n\t\t\treturn this.#adapter.read(path);\n\t\t}\n\t}\n\n\tasync write(path, contents, metadata = null) {\n\t\tif (!(path instanceof Path)) {\n\t\t\tpath = new Path(Path.collapse(path, this.#path));\n\t\t}\n\t\tif (!this.#adapter.supportsWrite()) {\n\t\t\tthrow new Error('Adapter '+this.#adapter.name+' is read only.');\n\t\t}\n\t\tif (typeof contents === 'function') {\n\t\t\tif (!this.#adapter.supportsStreamingWrite()) {\n\t\t\t\tthrow new Error('Adapter '+this.#adapter.name+' does not support streaming writing.');\n\t\t\t}\n\t\t\treturn this.#adapter.writeStream(path, contents, metadata);\n\t\t} else if (typeof contents === 'string') {\n\t\t\treturn this.#adapter.write(path, contents, metadata);\n\t\t} else {\n\t\t\tthrow new TypeError('Cannot write contents of type '+(typeof contents));\n\t\t}\n\t}\n\n\tasync delete(path) {\n\t\tif (!(path instanceof Path)) {\n\t\t\tpath = new Path(Path.collapse(path, this.#path));\n\t\t}\n\t\treturn this.#adapter.delete(path);\n\t}\n\n\tasync exists(path) {\n\t\tif (!(path instanceof Path)) {\n\t\t\tpath = new Path(Path.collapse(path, this.#path));\n\t\t}\n\t\treturn this.#adapter.exists(path);\n\t}\n\n\tasync list(path='') {\n\t\tif (!(path instanceof Path)) {\n\t\t\tpath = new Path(Path.collapse(path, this.#path));\n\t\t}\n\t\treturn this.#adapter.list(path);\n\t}\n}\n\n","export default class Path {\n    #value;\n\n    constructor(path) {\n        this.#value = Path.collapse(path);\n    }\n\n    get value() {\n        return this.#value;\n    }\n\n    toString() {\n        return this.#value;\n    }\n\n    static collapse(path, cwd='') {\n        if (path instanceof Path) {\n            return path.value;\n        }\n        if (typeof path !== 'string' ) {\n            throw new TypeError('path argument must be a string or an instance of Path');\n        }\n        if (cwd && !(cwd instanceof Path)) {\n            cwd = new Path(cwd);\n        }\n        path = path.trim();\n        if (path.length===0) {\n            return cwd.value;\n        }\n        if (Path.isRelative(path)) {\n            path = cwd+path;\n        }\n        let pathnames = Path.reduce(path, (result, entry) => {\n            if (entry == '..' ) {\n                result.pop();\n            } else if (entry !== '.') {\n                result.push(entry);\n            }\n            return result;\n        }, []);\n        let result = '/'+pathnames.join('/');\n        if (Path.isFolder(path)) {\n            result += '/';\n        }\n        return result;\n    }\n\n    static isAbsolute(path) {\n        if (path instanceof Path) {\n            return true;\n        }\n        return path.length && path[0]==='/';\n    }\n\n    static isRelative(path) {\n        return !Path.isAbsolute(path);    \n    }\n\n    static isFolder(path) {\n        if (path instanceof Path) {\n            path = path.value;\n        }\n        return path.length && path[path.length-1] == '/';\n    }\n\n    static isPath(path) {\n        if (path instanceof Path) {\n            return true;\n        }\n        if (typeof path !== 'string') {\n            return false;\n        }\n        path = path.trim();\n        let u = new URL(path, document.location);\n        return u.pathname == path;\n    }\n\n    static reduce(path, reducer, initial) {\n        if (path instanceof Path) {\n            path = path.value;\n        }\n        return path.split('/').filter(Boolean).reduce(reducer, initial);\n    }\n\n    static map(path, callback) {\n        if (path instanceof Path) {\n            path = path.value;\n        }\n        return path.split('/').filter(Boolean).map(callback);\n    }\n\n    static parent(path) {\n        if (path instanceof Path) {\n            path = path.value;\n        }\n        path = path.split('/').filter(Boolean);\n        path.pop();\n        return path.join('/')+'/';\n    }\n\n    static filename(path) {\n        if (path instanceof Path) {\n            path = path.value;\n        }\n        return path.split('/').filter(Boolean).pop();\n    }\n    \n    static head(path) {\n        if (path instanceof Path) {\n            path = path.value;\n        }\n        return path.split('/').filter(Boolean).shift();\n    }\n    \n    static tail(path) {\n        if (path instanceof Path) {\n            path = path.value;\n        }\n        path = path.split('/').filter(Boolean)\n        path.shift();\n        return path.join('/')+'/';\n    }\n}","import Path from '../Path.js';\n\nexport default class HttpAdapter {\n    \n    #url;\n    #path;\n    #exceptionHandler;\n    #fetchParams;\n\n    constructor(url, exceptionHandler=null, fetchParams={}) {\n        this.#url = url;\n        let u = new URL(url);\n        this.#path = new Path(u.pathname);\n        this.#exceptionHandler = exceptionHandler;\n        this.#fetchParams = fetchParams;\n    }\n\n    get name() {\n        return 'HttpAdapter';\n    }\n\n    get path() {\n        return this.#path;\n    }\n\n    supportsWrite() {\n        return true;\n    }\n\n    supportsStreamingWrite() {\n        return supportsRequestStreamsP;\n    }\n\n    supportsStreaminRead() {\n        return true;\n    }\n\n    cd(path) {\n        if (!Path.isPath(path)) {\n            throw new TypeError(path+' is not a valid path');\n        }\n        let url = new URL(path, this.#url);\n        return new HttpAdapter(url.href);\n    }\n\n    async write(path, contents, metadata=null) {\n        let params = Object.assign({}, this.#fetchParams, {\n            method: 'PUT',\n            body: contents\n        });\n        return this.#fetch(path, params);\n    }\n\n    writeStream(path, writer, metadata=null) {\n\n    }\n\n    async read(path) {\n        let params = Object.assign({}, this.#fetchParams, {\n            method: 'GET'\n        });\n        return this.#fetch(path, params);\n    }\n\n    readStream(path, reader) {\n\n    }\n\n    async exists(path) {\n        let params = Object.assign({}, this.#fetchParams, {\n            method: 'HEAD'\n        });\n        return this.#fetch(path, params);\n    }\n\n    async delete(path) {\n        let params = Object.assign({}, this.#fetchParams, {\n            method: 'DELETE'\n        });\n        return this.#fetch(path, params);\n    }\n\n    async list(path) {\n        let supportedContentTypes = [\n            'text/html','text/xhtml','text/xhtml+xml','text/xml'\n        ];\n        return this.read(path)\n            .then(response => {\n                if (response.ok) {\n                    let contentType = response.headers.get('Content-Type').split(';')[0];\n                    if (supportedContentTypes.includes(contentType)) {\n                        return response.text();\n                    } else {\n                        throw new TypeError('URL '+this.#url+' is not of a supported content type', {\n                            cause: response\n                        });\n                    }\n                } else {\n                    throw response\n                }\n            })\n            .then(html => {\n                let parentUrl = new URL(this.#url);\n                let dom = document.createElement('template');\n                dom.innerHTML = html;\n                let links = dom.content.querySelectorAll('a[href]');\n                links = Array.from(links).filter(link => {\n                    // show only links that have the current URL as direct parent\n                    let parentLink = link.cloneNode();\n                    parentLink.pathname = Path.parent(parentLink.pathname);\n                    // this also filters out links with extra query string of fragment hash -- is that correct? @TODO\n                    return parentLink.href===parentUrl.href;\n                });\n                return links.map(link => {\n                    return {\n                        filename: Path.filename(link.pathname),\n                        path: link.pathname,\n                        name: link.innerText\n                    }\n                });\n            });\n    }\n\n    async #fetch(path, options) {\n        let url = new URL(path, this.#url);\n        return fetch(url, options)\n        .catch(e => {\n            if (!this.#exceptionHandler || !this.#exceptionHandler(url, options, e)) {\n                throw e;\n            }\n        })\n    }\n}\n\nconst supportsRequestStreamsP = (async () => {\n    const supportsStreamsInRequestObjects = !new Request(\n        '', \n        {\n            body: new ReadableStream(),\n            method: 'POST',\n        }\n    )\n    .headers.has('Content-Type');\n\n    if (!supportsStreamsInRequestObjects) {\n        return false;\n    }\n\n    return fetch(\n        'data:a/a;charset=utf-8,', \n        {\n            method: 'POST',\n            body: new ReadableStream(),\n        }\n    )\n    .then(() => true, () => false);\n})();"],"names":[],"version":3,"file":"main.js.map"}